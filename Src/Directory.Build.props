<Project>
  <PropertyGroup>
    <!-- Configure the supported C# language version -->
    <LangVersion>latest</LangVersion>
    <!--TODO: <Nullable>enable</Nullable>-->

    <!-- Redirect output directories -->
    <UseArtifactsOutput>true</UseArtifactsOutput>
    <ArtifactsPath>$(MSBuildThisFileDirectory)..\Build</ArtifactsPath>
    <VSTestResultsDirectory>$(MSBuildThisFileDirectory)..\Build\TestResults</VSTestResultsDirectory>

    <!-- Configure NuGet package properties -->
    <Authors>Michael Grafnetter</Authors>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <Copyright>Copyright (c) 2021-2025 Michael Grafnetter. All rights reserved.</Copyright>
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
    <PackageProjectUrl>https://github.com/MichaelGrafnetter/webauthn-interop</PackageProjectUrl>
    <RepositoryUrl>https://github.com/MichaelGrafnetter/webauthn-interop.git</RepositoryUrl>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PackageIcon>icon.png</PackageIcon>
    <PackageTags>PassKeys;FIDO;FIDO2;CTAP2;U2F;WebAuthn;Passwordless;Security;Windows;Hello;WHfB;Interop;2FA;MFA;Authentication;Identity</PackageTags>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <NeutralLanguage>en-US</NeutralLanguage>
    <IncludeSymbols>true</IncludeSymbols>
    <RestorePackagesWithLockFile>true</RestorePackagesWithLockFile>
    <EnablePackageValidation>true</EnablePackageValidation>

    <!-- Configure publishing options -->
    <PublishRelease>true</PublishRelease>

    <!-- Configure MSTest properties -->
    <VSTestLogger>html;trx</VSTestLogger>
    <VSTestCollect>XPlat Code Coverage;Code Coverage</VSTestCollect>
    <VSTestVerbosity>normal</VSTestVerbosity>

    <!-- Turn off reference assembly generation -->
    <ProduceReferenceAssembly>false</ProduceReferenceAssembly>
  </PropertyGroup>

  <!-- Note: Fido2.Models is currently not strong-name signed, so the Adapter DLLs cannot be signed. -->
  <PropertyGroup Condition="
                   '$(Configuration)' == 'Release' AND
                   Exists('..\Keys\DSInternals.Private.snk') AND
                   (
                    '$(MSBuildProjectName)' == 'DSInternals.Win32.WebAuthn' OR
                    '$(MSBuildProjectName)' == 'DSInternals.Win32.WebAuthn.Tests'
                   )">
    <SignAssembly>true</SignAssembly>
    <AssemblyOriginatorKeyFile>$(MSBuildThisFileDirectory)..\Keys\DSInternals.Private.snk</AssemblyOriginatorKeyFile>
    <StrongNamePublicKey>002400000480000094000000060200000024000052534131000400000100010077154b93d8084f0f30c52174d6c93d25ffdc65e11ba1b125383e55c6095061df3c2f765401c21434aa413aa264b6eb3039d95c5f33a9d4eb7deb695b55e434d8dd9b42e0e86f3287498732d3a30d0ee22d8d58b2361f033351d5c1a64a16324ac6c42b5a4b14c12483b52a98a43f7e934df86b92cc8a9c4ee0f408d7b6d987e3</StrongNamePublicKey>
    <DelaySign>false</DelaySign>
  </PropertyGroup>

  <ItemGroup>
    <!-- Additional files to include in NuGet packages -->
    <None Include="$(MSBuildThisFileDirectory)Icons/package_black.png" Pack="true" PackagePath="/icon.png" Visible="false" />
    <None Include="$(MSBuildThisFileDirectory)../LICENSE" Pack="true" PackagePath="/" Visible="false" />
  </ItemGroup>
</Project>
