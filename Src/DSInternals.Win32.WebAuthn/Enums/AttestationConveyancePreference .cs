using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using Windows.Win32;

namespace DSInternals.Win32.WebAuthn
{
    /// <summary>
    /// This enumeration contains attestation conveyance options for credential generation.
    /// </summary>
    /// <see>https://www.w3.org/TR/webauthn-2/#enum-attestation-convey</see>
    [JsonConverter(typeof(JsonStringEnumConverter<AttestationConveyancePreference>))]
    public enum AttestationConveyancePreference : uint
    {
        /// <remarks>
        /// Corresponds to WEBAUTHN_ATTESTATION_CONVEYANCE_PREFERENCE_ANY.
        /// </remarks>
        Any = PInvoke.WEBAUTHN_ATTESTATION_CONVEYANCE_PREFERENCE_ANY,

        /// <summary>
        /// This value indicates that the Relying Party is not interested in authenticator attestation.
        /// </summary>
        /// <remarks>
        /// Corresponds to WEBAUTHN_ATTESTATION_CONVEYANCE_PREFERENCE_NONE.
        /// </remarks>
        [EnumMember(Value = "none")]
        None = PInvoke.WEBAUTHN_ATTESTATION_CONVEYANCE_PREFERENCE_NONE,

        /// <summary>
        /// This value indicates that the Relying Party prefers an attestation conveyance yielding verifiable attestation statements,
        /// but allows the client to decide how to obtain such attestation statements.
        /// </summary>
        /// <remarks>
        /// Corresponds to WEBAUTHN_ATTESTATION_CONVEYANCE_PREFERENCE_INDIRECT.
        /// </remarks>
        [EnumMember(Value = "indirect")]
        Indirect = PInvoke.WEBAUTHN_ATTESTATION_CONVEYANCE_PREFERENCE_INDIRECT,

        /// <summary>
        /// This value indicates that the Relying Party wants to receive the attestation statement as generated by the authenticator.
        /// </summary>
        /// <remarks>
        /// Corresponds to WEBAUTHN_ATTESTATION_CONVEYANCE_PREFERENCE_DIRECT.
        /// </remarks>
        [EnumMember(Value = "direct")]
        Direct = PInvoke.WEBAUTHN_ATTESTATION_CONVEYANCE_PREFERENCE_DIRECT

        // TODO: Enterprise AttestationConveyancePreference
    }
}
