name: 'Build and Test'

on:
  push:
    paths:
    - 'Src/**'
    - '.github/workflows/**'

jobs:
  build:
    name: 'Build'
    runs-on: windows-latest
    timeout-minutes: 10
    permissions:
      contents: read
      issues: read
      checks: write
      pull-requests: write
    env:
      DOTNET_NOLOGO: true
      DOTNET_CLI_TELEMETRY_OPTOUT: true
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
          dotnet-version: 8.x
          cache: false
      env:
        DOTNET_INSTALL_DIR: 'C:\Program Files\dotnet'

    - name: Cache NuGet Packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        # Heuristics: The current list of required packages is defined in the project files.
        key: ${{ runner.os }}-DotNET-NuGet-Build-${{ hashFiles('**/*.csproj') }}

    - name: Build
      working-directory: Src
      run: dotnet build --configuration Release  --nologo

    - name: Create NuGet Packages
      working-directory: Src
      run: dotnet pack --configuration Release --no-build --nologo

    - name: Run Non-Interactive Unit Tests
      working-directory: Src
      run: dotnet test --filter TestCategory!=Interactive --configuration Debug --nologo
      continue-on-error: true

    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action/windows@v2
      if: always()
      with:
        files: |
          Build\TestResults\**\*.xml
          Build\TestResults\**\*.trx
          Build\TestResults\**\*.json

    - name: Cache DotNet Global Tools
      id: cache-dotnet-globaltools
      uses: actions/cache@v4
      with:
        path: ~/.dotnet/tools
        # Heuristics: The current list of required global tools is defined in this workflow file.
        key: ${{ runner.os }}-DotNET-GlobalTools-Build-${{ hashFiles('.github/workflows/autobuild.yml') }}

    - name: Install Coverage Report Generator
      if: ${{ steps.cache-dotnet-globaltools.outputs.cache-hit != 'true' }}
      run: dotnet tool install --global dotnet-reportgenerator-globaltool

    - name: Generate Code Coverage Reports
      working-directory: Build/TestResults
      run: reportgenerator -reports:*/coverage.cobertura.xml -targetdir:. -reporttypes:"HtmlSummary" -title:"WebAuthn Interop Assembly"

    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      with:
        name: TestResults
        path: |
            Build/TestResults/*.*
            !**/*.htm

    - name: Upload NuGet Packages as Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: NuGet
        path: Build/bin/Release/Packages/*nupkg

    - name: Upload Desktop App as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: Fido2UI
        path: Build/bin/Release/Fido2UI/*

  analyze:
    name: CodeQL
    runs-on: windows-latest
    ## Not licensed
    if: false
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'csharp' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}

    - name: Autobuild
      uses: github/codeql-action/autobuild@v2

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
